apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'jacoco-android'
apply plugin: "de.mannodermaus.android-junit5"

android {

    compileSdkVersion targetSdk
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "de.glasparlament.glasparlament"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        multiDexEnabled true
        versionCode vcode
        versionName vname
        testInstrumentationRunner testRunner

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString(),
                             "room.incremental":"true",
                             "room.expandProjection":"true"]
            }
        }
    }

    buildTypes {
        def getProperty = { key ->
            if (System.getenv(key))
                return "\"${System.env.API_KEY}\""
            else if (project.hasProperty(key))
                return project.property(key)
            else
                return ""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'APP_CENTER_APP_SECRET', getProperty("APP_CENTER_APP_SECRET"))
            buildConfigField('String', 'BASE_URL', getProperty("BASE_URL"))
        }
        debug {
            buildConfigField("String", "APP_CENTER_APP_SECRET", getProperty("APP_CENTER_APP_SECRET"))
            buildConfigField('String', 'BASE_URL', getProperty("BASE_URL"))
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    lintOptions {
        warningsAsErrors true
    }

    kotlinOptions {
        jvmTarget =  "1.8"
    }

    buildToolsVersion = '28.0.3'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //General
    implementation libraries.kotlinStd
    implementation libraries.kotlinReflect

    //Lifecycle
    implementation libraries.lifecycleViewmodel
    implementation libraries.lifecycleExtensions

    //project
    implementation project(':remote-data')
    implementation project(':organization')
    implementation project(':organization-repository')
    implementation project(':body-repository')
    implementation project(':agendaitem')
    implementation project(':agendaitem-repository')
    implementation project(':meeting')
    implementation project(':meeting-repository')
    implementation project(':common-android')

    //Navigation
    implementation libraries.navigationFragment
    implementation libraries.navigationUi

    //Appcenter
    implementation libraries.appcenterAnalytics
    implementation libraries.appcenterCrashes

    //Room
    implementation libraries.roomRuntime

    //koin
    implementation libraries.koin

    //retrofit
    implementation libraries.retrofit
    implementation libraries.retrofitGson
    implementation libraries.httpLogging

    //leakcanary
    debugImplementation libraries.leakcanary

    //test
    androidTestImplementation libraries.testRunner
    testImplementation libraries.junit
    androidTestImplementation libraries.espresso
    testRuntimeOnly libraries.junitEngine

}
repositories {
    mavenCentral()
}